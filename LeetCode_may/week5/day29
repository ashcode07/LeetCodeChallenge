class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<vector<int>> vec(numCourses,vector<int>());
        for(auto &pre:prerequisites){
            vec[pre[0]].emplace_back(pre[1]);
        }
        vector<int> visited(numCourses,0);
        for(int i=0;i<numCourses;i++){
            if(visited[i]==0 && !dfs(vec,visited,i))
                return false;
        }
        return true;
    }
    bool dfs( vector<vector<int>> &vec,vector<int> &visited,int v){
        if(visited[v]==1){
            return false;
        }
        visited[v]=1;
        for(auto &i:vec[v])
            if(!dfs(vec,visited,i))
                return false;
            visited[v]=2;
        return true;
    }
};