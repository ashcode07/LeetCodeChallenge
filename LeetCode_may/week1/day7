/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void dfs(TreeNode *root,int depth[],int parent[]){
        if(root->left){
            parent[root->left->val]=root->val;
            depth[root->left->val]=depth[root->val]+1;
            dfs(root->left,depth,parent);
        }
         if(root->right){
            parent[root->right->val]=root->val;
            depth[root->right->val]=depth[root->val]+1;
            dfs(root->right,depth,parent);
        }
    }
public:
    bool isCousins(TreeNode* root, int x, int y) {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        int depth[101],parent[101];
        depth[root->val]=0;
        parent[root->val]=-1;
        dfs(root,depth,parent);
        if(depth[x]==depth[y]&&parent[x]!=parent[y])
            return true;
        else return false;
    }
};